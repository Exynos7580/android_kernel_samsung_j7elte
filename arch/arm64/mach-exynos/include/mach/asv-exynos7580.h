/* linux/arch/arm64/mach-exynos/include/mach/asv-exynos7580.h
*
* Copyright (c) 2014 Samsung Electronics Co., Ltd.
*              http://www.samsung.com/
*
* EXYNOS7580 - Adoptive Support Voltage Header file
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License version 2 as
* published by the Free Software Foundation.
*/

#ifndef __ASM_ARCH_EXYNOS7580_ASV_H
#define __ASM_ARCH_EXYNOS7580_ASV_H __FILE__

#include <mach/map.h>

#define CHIPID_ABBG_BASE	S5P_VA_PMU
#define CHIPID_ASV_TBL_BASE	S5P_VA_CHIPID2

#define ASV_RUNTIME   0
#define SYSC_DVFS_END_LVL_CPU  SYSC_DVFS_L20
#define SYSC_DVFS_END_LVL_APL  SYSC_DVFS_L20
#define SYSC_DVFS_END_LVL_G3D  SYSC_DVFS_L8
#define SYSC_DVFS_END_LVL_MIF  SYSC_DVFS_L8
#define SYSC_DVFS_END_LVL_INT  SYSC_DVFS_L8
#define SYSC_DVFS_END_LVL_ISP  SYSC_DVFS_L6
#define MAX_ASV_GROUP   16

#define TABLE_VERSION   0x008000
#define ASV_RSVD   0xFFFF

#define get_asv_apl0_group()  GetBits(CHIPID_ASV_TBL_BASE+0x0000,0,4095)
#define get_asv_apl0_ssa()  GetBits(CHIPID_ASV_TBL_BASE+0x0000,12,15)
#define get_asv_apl1_group()  GetBits(CHIPID_ASV_TBL_BASE+0x0000,16,4095)
#define get_asv_apl1_ssa()  GetBits(CHIPID_ASV_TBL_BASE+0x0000,28,15)
#define get_asv_g3d_group()  GetBits(CHIPID_ASV_TBL_BASE+0x0004,0,4095)
#define get_asv_g3d_ssa()  GetBits(CHIPID_ASV_TBL_BASE+0x0004,12,15)
#define get_asv_mif_int_group()  GetBits(CHIPID_ASV_TBL_BASE+0x0004,16,4095)
#define get_asv_mif_int_ssa()  GetBits(CHIPID_ASV_TBL_BASE+0x0004,28,15)
#define get_asv_table_version()  ((GetBits(CHIPID_ASV_TBL_BASE+0x000C,0,15)<<2)|(GetBits(CHIPID_ASV_TBL_BASE+0x0008,30,3)))
#define get_asv_group_type()  GetBits(CHIPID_ASV_TBL_BASE+0x000C,4,15)
#define get_shift_type()  GetBits(CHIPID_ASV_TBL_BASE+0x000C,11,1)
#define get_boost_type()  GetBits(CHIPID_ASV_TBL_BASE+0x000C,12,1)
#define get_locking_type()  GetBits(CHIPID_ASV_TBL_BASE+0x000C,13,1)
#define get_asv_method()  GetBits(CHIPID_ASV_TBL_BASE+0x000C,17,1)
#define get_asb_pgm_version()  GetBits(CHIPID_ASV_TBL_BASE+0x000C,18,16383)

typedef struct {
	unsigned apl0_grp: 4;
	signed apl0_modify: 4;
	unsigned apl0_boost0: 2;
	unsigned apl0_boost1: 2;
	unsigned apl0_ssa: 4;

	unsigned apl1_grp: 4;
	signed apl1_modify: 4;
	unsigned apl1_boost0: 2;
	unsigned apl1_boost1: 2;
	unsigned apl1_ssa: 4;

	unsigned g3d_grp: 4;
	signed g3d_modify: 4;
	unsigned g3d_boost0: 2;
	unsigned g3d_boost1: 2;
	unsigned g3d_ssa: 4;

	unsigned mif_int_grp: 4;
	signed mif_int_modify: 4;
	unsigned mif_int_boost0: 2;
	unsigned mif_int_boost1: 2;
	unsigned mif_int_ssa: 4;

	unsigned asv0_rsvd_1: 30;

	unsigned asv_tbl_ver_low: 2;
	unsigned asv_tbl_ver_high: 4;
	unsigned grp_type: 4;
	unsigned speed_option: 3;
	unsigned shift_type: 1;
	unsigned boost_type: 1;
	unsigned locking_type: 1;

	unsigned asv0_rsvd_2: 3;
	unsigned asv_method: 1;
	unsigned pgm_ver: 14;
} ASV_BANK0;

typedef struct {
	unsigned apl0_ids: 8;
	unsigned apl1_ids: 8;
	unsigned int_ids: 8;
	unsigned mif_ids: 8;
	unsigned g3d_ids: 8;

	unsigned asv2_rsvd_1: 16;
	unsigned apl0_hpm: 8;
	unsigned asv2_rsvd_2: 8;
	unsigned apl1_hpm: 8;
	unsigned g3d_vthr: 2;
	unsigned g3d_delta: 2;
	unsigned asv2_rsvd_3: 12;
	unsigned asv2_rsvd_4: 32;
} ASV_BANK2;

const u32 volt_table_arm_1[SYSC_DVFS_END_LVL_CPU+1][MAX_ASV_GROUP+1] = {
//		  ASV_0    ASV_1    ASV_2    ASV_3    ASV_4    ASV_5    ASV_6    ASV_7    ASV_8    ASV_9    ASV_10   ASV_11   ASV_12   ASV_13   ASV_14   ASV_15
	{2000000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000},
	{1900000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000},
	{1800000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000},
	{1700000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000},
	{1600000, 1300000, 1287500, 1262500, 1237500, 1225000, 1212500, 1200000, 1187500, 1175000, 1162500, 1150000, 1137500, 1125000, 1112500, 1100000, 1087500},
	{1500000, 1262500, 1237500, 1212500, 1187500, 1175000, 1168750, 1156250, 1143750, 1131250, 1118750, 1106250, 1093750, 1081250, 1075000, 1062500, 1050000},
	{1400000, 1218750, 1193750, 1168750, 1143750, 1131250, 1125000, 1112500, 1100000, 1087500, 1081250, 1068750, 1056250, 1043750, 1037500, 1025000, 1012500},
	{1300000, 1175000, 1150000, 1125000, 1100000, 1087500, 1081250, 1068750, 1056250, 1043750, 1037500, 1031250, 1018750, 1006250, 1000000,  987500,  975000},
	{1200000, 1131250, 1106250, 1081250, 1056250, 1043750, 1037500, 1031250, 1018750, 1006250, 1000000,  993750,  981250,  968750,  962500,  956250,  943750},
	{1100000, 1093750, 1068750, 1043750, 1018750, 1006250, 1000000,  993750,  981250,  968750,  962500,  956250,  943750,  931250,  925000,  918750,  912500},
	{1000000, 1056250, 1031250, 1006250,  981250,  968750,  962500,  956250,  943750,  937500,  931250,  925000,  912500,  900000,  893750,  887500,  881250},
	{900000,  1018750,  993750,  968750,  943750,  931250,  925000,  918750,  906250,  900000,  893750,  887500,  881250,  868750,  862500,  856250,  850000},
	{800000,   981250,  956250,  931250,  906250,  893750,  893750,  887500,  875000,  868750,  862500,  856250,  850000,  850000,  850000,  850000,  850000},
	{700000,   950000,  925000,  900000,  875000,  862500,  862500,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{600000,   925000,  900000,  875000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{500000,   900000,  875000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{400000,   875000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{300000,   850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{200000,   850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{100000,   850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
};

const u32 volt_table_g3d_1[SYSC_DVFS_END_LVL_G3D+1][MAX_ASV_GROUP+1] = {
//     	      ASV_0    ASV_1    ASV_2    ASV_3    ASV_4    ASV_5    ASV_6    ASV_7    ASV_8    ASV_9    ASV_10   ASV_11   ASV_12   ASV_13   ASV_14   ASV_15
	{800, 1181250, 1162500, 1143750, 1125000, 1112500, 1100000, 1093750, 1081250, 1068750, 1062500, 1050000, 1037500, 1031250, 1018750, 1012500, 1000000},
	{734, 1125000, 1106250, 1087500, 1075000, 1062500, 1050000, 1043750, 1031250, 1025000, 1012500, 1006250,  993750,  987500,  975000,  968750,  956250},
	{668, 1075000, 1056250, 1037500, 1025000, 1012500, 1006250,  993750,  987500,  981250,  968750,  962500,  950000,  950000,  950000,  950000,  950000},
	{534, 1018750, 1000000,  987500,  968750,  962500,  956250,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000},
	{440, 1018750, 1000000,  987500,  968750,  962500,  956250,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000},
	{350, 1006250,  993750,  981250,  968750,  956250,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000},
	{266,  975000,  962500,  956250,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000},
	{160,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000,  950000},
};

const u32 volt_table_mif_1[SYSC_DVFS_END_LVL_MIF+1][MAX_ASV_GROUP+1] = {
//             ASV_0  ASV_1   ASV_2   ASV_3   ASV_4   ASV_5   ASV_6   ASV_7   ASV_8   ASV_9   ASV_10  ASV_11  ASV_12  ASV_13  ASV_14  ASV_15
	{825, 981250, 968750, 956250, 943750, 937500, 931250, 925000, 918750, 912500, 906250, 900000, 893750, 887500, 881250, 875000, 868750},
	{728, 950000, 937500, 931250, 918750, 912500, 906250, 900000, 893750, 893750, 887500, 881250, 875000, 868750, 862500, 856250, 856250},
	{667, 950000, 937500, 931250, 918750, 912500, 906250, 900000, 893750, 893750, 887500, 881250, 875000, 868750, 862500, 856250, 856250},
	{559, 937500, 925000, 918750, 906250, 900000, 893750, 887500, 881250, 875000, 868750, 862500, 856250, 856250, 850000, 850000, 850000},
	{416, 881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
	{338, 881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
	{273, 881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
	{200, 881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
};

const u32 volt_table_int_1[SYSC_DVFS_END_LVL_INT+1][MAX_ASV_GROUP+1] = {
//     	       ASV_0    ASV_1    ASV_2    ASV_3    ASV_4    ASV_5    ASV_6    ASV_7    ASV_8    ASV_9    ASV_10   ASV_11   ASV_12   ASV_13   ASV_14   ASV_15
	{400,  981250,  968750,  956250,  943750,  937500,  931250,  925000,  918750,  912500,  906250,  900000,  893750,  887500,  881250,  875000,  868750},
	{334,  950000,  937500,  931250,  918750,  912500,  906250,  900000,  893750,  893750,  887500,  881250,  875000,  868750,  862500,  856250,  856250},
	{267,  950000,  937500,  931250,  918750,  912500,  906250,  900000,  893750,  893750,  887500,  881250,  875000,  868750,  862500,  856250,  856250},
	{200,  937500,  925000,  918750,  906250,  900000,  893750,  887500,  881250,  875000,  868750,  862500,  856250,  856250,  850000,  850000,  850000},
	{160,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{134,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{111,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{100,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
};

const u32 volt_table_isp_1[SYSC_DVFS_END_LVL_ISP+1][MAX_ASV_GROUP+1] = {
//	      ASV_0    ASV_1     ASV_2    ASV_3    ASV_4    ASV_5    ASV_6    ASV_7    ASV_8    ASV_9    ASV_10   ASV_11   ASV_12   ASV_13   ASV_14   ASV_15
	{530,  981250,  968750,  956250,  943750,  937500,  931250,  925000,  918750,  912500,  906250,  900000,  893750,  887500,  881250,  875000,  868750},
	{430,  950000,  937500,  931250,  918750,  912500,  906250,  900000,  893750,  893750,  887500,  881250,  875000,  868750,  862500,  856250,  856250},
	{400,  950000,  937500,  931250,  918750,  912500,  906250,  900000,  893750,  893750,  887500,  881250,  875000,  868750,  862500,  856250,  856250},
	{334,  937500,  925000,  918750,  906250,  900000,  893750,  887500,  881250,  875000,  868750,  862500,  856250,  856250,  850000,  850000,  850000},
	{267,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{200,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
};

const u32 abb_table_arm_1[SYSC_DVFS_END_LVL_CPU+1][MAX_ASV_GROUP+1] = {
//		  ASV_0	      ASV_1       ASV_2	      ASV_3	  ASV_4	      ASV_5	  ASV_6	      ASV_7	  ASV_8	      ASV_9	  ASV_10      ASV_11      ASV_12      ASV_13      ASV_14      ASV_15
	{2000000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1900000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1800000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1700000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1600000,	 0x0, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1500000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1400000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1300000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1200000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1100000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1000000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{900000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{800000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,	     0xA},
	{700000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA},
	{600000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA},
	{500000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA},
	{400000,  ABB_BYPASS, ABB_BYPASS,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA},
	{300000,  ABB_BYPASS,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA},
	{200000,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA},
	{100000,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA,	 0xA,	     0xA},
};

const u32 abb_table_mif_1[SYSC_DVFS_END_LVL_MIF+1][MAX_ASV_GROUP+1] = {
//	      ASV_0	  ASV_1       ASV_2	  ASV_3	      ASV_4	  ASV_5	      ASV_6	  ASV_7	      ASV_8	  ASV_9	      ASV_10      ASV_11      ASV_12      ASV_13      ASV_14      ASV_15
	{825, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{728, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{667, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{559, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{416, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA},
	{338, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA},
	{273, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA},
	{200, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA},
};

const u32 abb_table_int_1[SYSC_DVFS_END_LVL_INT+1][MAX_ASV_GROUP+1] = {
//	      ASV_0	  ASV_1       ASV_2	  ASV_3	      ASV_4	  ASV_5	      ASV_6	  ASV_7	      ASV_8	  ASV_9	      ASV_10      ASV_11      ASV_12      ASV_13      ASV_14      ASV_15
	{400, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{334, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{267, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{200, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{160, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA},
	{134, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA},
	{111, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA},
	{100, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA},
};

const u32 abb_table_isp_1[SYSC_DVFS_END_LVL_ISP+1][MAX_ASV_GROUP+1] = {
//	      ASV_0	  ASV_1       ASV_2	  ASV_3	      ASV_4	  ASV_5	      ASV_6	  ASV_7	      ASV_8	  ASV_9	      ASV_10      ASV_11      ASV_12      ASV_13      ASV_14      ASV_15
	{530, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{430, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{400, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{334, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{267, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA},
	{200, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA,  0xA},
};

const u32 volt_table_arm_2[SYSC_DVFS_END_LVL_CPU+1][MAX_ASV_GROUP+1] = {
//		  ASV_0    ASV_1    ASV_2    ASV_3    ASV_4    ASV_5    ASV_6    ASV_7    ASV_8    ASV_9    ASV_10   ASV_11   ASV_12   ASV_13   ASV_14   ASV_15
	{2000000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000},
	{1900000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000},
	{1800000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000},
	{1700000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000, 1300000},
	{1600000, 1325000, 1312500, 1287500, 1262500, 1250000, 1237500, 1225000, 1212500, 1200000, 1187500, 1175000, 1162500, 1150000, 1137500, 1125000, 1112500},
	{1500000, 1312500, 1275000, 1237500, 1212500, 1200000, 1193750, 1181250, 1168750, 1156250, 1143750, 1131250, 1118750, 1106250, 1100000, 1087500, 1075000},
	{1400000, 1268750, 1231250, 1193750, 1168750, 1156250, 1150000, 1137500, 1125000, 1112500, 1106250, 1093750, 1081250, 1068750, 1062500, 1050000, 1037500},
	{1300000, 1225000, 1187500, 1150000, 1125000, 1112500, 1106250, 1093750, 1081250, 1068750, 1062500, 1056250, 1043750, 1031250, 1025000, 1012500, 1000000},
	{1200000, 1181250, 1143750, 1106250, 1081250, 1068750, 1062500, 1056250, 1043750, 1031250, 1025000, 1018750, 1006250,  993750,  987500,  981250,  968750},
	{1100000, 1143750, 1106250, 1068750, 1043750, 1031250, 1025000, 1018750, 1006250,  993750,  987500,  981250,  968750,  956250,  950000,  943750,  937500},
	{1000000, 1106250, 1068750, 1031250, 1006250,  993750,  987500,  981250,  968750,  962500,  956250,  950000,  937500,  925000,  918750,  912500,  906250},
	{900000,  1068750, 1031250,  993750,  968750,  956250,  950000,  943750,  931250,  925000,  918750,  912500,  906250,  893750,  887500,  881250,  875000},
	{800000,  1031250,  993750,  956250,  931250,  918750,  918750,  912500,  900000,  893750,  887500,  881250,  875000,  862500,  856250,  850000,  850000},
	{700000,  1000000,  962500,  925000,  900000,  887500,  887500,  881250,  868750,  868750,  862500,  856250,  850000,  850000,  850000,  850000,  850000},
	{600000,   975000,  937500,  900000,  875000,  862500,  862500,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{500000,   950000,  912500,  875000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{400000,   925000,  887500,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{300000,   900000,  862500,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{200000,   875000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{100000,   850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
};

const u32 volt_table_g3d_2[SYSC_DVFS_END_LVL_G3D+1][MAX_ASV_GROUP+1] = {
//     	      ASV_0    ASV_1    ASV_2    ASV_3    ASV_4    ASV_5    ASV_6    ASV_7    ASV_8    ASV_9    ASV_10   ASV_11   ASV_12   ASV_13   ASV_14   ASV_15
	{800, 1206250, 1187500, 1168750, 1143750, 1137500, 1125000, 1118750, 1106250, 1093750, 1087500, 1075000, 1062500, 1056250, 1043750, 1037500, 1025000},
	{734, 1150000, 1131250, 1112500, 1093750, 1087500, 1075000, 1068750, 1056250, 1050000, 1037500, 1031250, 1018750, 1012500, 1000000,  993750,  981250},
	{668, 1100000, 1081250, 1062500, 1050000, 1037500, 1031250, 1018750, 1012500, 1006250,  993750,  987500,  975000,  968750,  956250,  950000,  943750},
	{534, 1000000,  987500,  968750,  956250,  943750,  937500,  931250,  918750,  912500,  906250,  893750,  887500,  881250,  868750,  862500,  856250},
	{440,  937500,  918750,  906250,  893750,  887500,  881250,  875000,  868750,  856250,  850000,  843750,  837500,  831250,  825000,  818750,  812500},
	{350,  881250,  868750,  856250,  843750,  837500,  831250,  825000,  818750,  812500,  806250,  800000,  793750,  787500,  787500,  787500,  787500},
	{266,  812500,  800000,  793750,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500},
	{160,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500},
};

const u32 volt_table_mif_2[SYSC_DVFS_END_LVL_MIF+1][MAX_ASV_GROUP+1] = {
//             ASV_0 	ASV_1   ASV_2   ASV_3   ASV_4   ASV_5   ASV_6   ASV_7   ASV_8   ASV_9   ASV_10  ASV_11  ASV_12  ASV_13  ASV_14  ASV_15
	{825,  1006250, 993750, 981250, 968750, 962500, 956250, 950000, 943750, 937500, 931250, 925000, 918750, 912500, 906250, 900000, 893750},
	{728,   975000, 962500, 950000, 937500, 931250, 925000, 918750, 912500, 906250, 900000, 893750, 887500, 881250, 875000, 868750, 862500},
	{667,   975000, 962500, 950000, 937500, 931250, 925000, 918750, 912500, 906250, 900000, 893750, 887500, 881250, 875000, 868750, 862500},
	{559,   962500, 950000, 937500, 925000, 918750, 912500, 906250, 900000, 893750, 887500, 881250, 875000, 868750, 862500, 856250, 850000},
	{416,   881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
	{338,   881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
	{273,   881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
	{200,   881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
};

const u32 volt_table_int_2[SYSC_DVFS_END_LVL_INT+1][MAX_ASV_GROUP+1] = {
//     	       ASV_0    ASV_1   ASV_2   ASV_3   ASV_4   ASV_5   ASV_6   ASV_7   ASV_8   ASV_9   ASV_10  ASV_11  ASV_12  ASV_13  ASV_14  ASV_15
	{400,  1006250, 993750, 981250, 968750, 962500, 956250, 950000, 943750, 937500, 931250, 925000, 918750, 912500, 906250, 900000, 893750},
	{334,   975000, 962500, 950000, 937500, 931250, 925000, 918750, 912500, 906250, 900000, 893750, 887500, 881250, 875000, 868750, 862500},
	{267,   975000, 962500, 950000, 937500, 931250, 925000, 918750, 912500, 906250, 900000, 893750, 887500, 881250, 875000, 868750, 862500},
	{200,   962500, 950000, 937500, 925000, 918750, 912500, 906250, 900000, 893750, 887500, 881250, 875000, 868750, 862500, 856250, 850000},
	{160,   881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
	{134,   881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
	{111,   881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
	{100,   881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
};

const u32 volt_table_isp_2[SYSC_DVFS_END_LVL_ISP+1][MAX_ASV_GROUP+1] = {
//	      ASV_0    ASV_1   ASV_2   ASV_3   ASV_4   ASV_5   ASV_6   ASV_7   ASV_8   ASV_9   ASV_10  ASV_11  ASV_12  ASV_13  ASV_14  ASV_15
	{530, 1006250, 993750, 981250, 968750, 962500, 956250, 950000, 943750, 937500, 931250, 925000, 918750, 912500, 906250, 900000, 893750},
	{430,  975000, 962500, 950000, 937500, 931250, 925000, 918750, 912500, 906250, 900000, 893750, 887500, 881250, 875000, 868750, 862500},
	{400,  975000, 962500, 950000, 937500, 931250, 925000, 918750, 912500, 906250, 900000, 893750, 887500, 881250, 875000, 868750, 862500},
	{334,  962500, 950000, 937500, 925000, 918750, 912500, 906250, 900000, 893750, 887500, 881250, 875000, 868750, 862500, 856250, 850000},
	{267,  881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
	{200,  881250, 868750, 856250, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000, 850000},
};

const u32 abb_table_arm_2[SYSC_DVFS_END_LVL_CPU+1][MAX_ASV_GROUP+1] = {
//		  ASV_0	      ASV_1       ASV_2	      ASV_3	  ASV_4	      ASV_5	  ASV_6	      ASV_7	  ASV_8	      ASV_9	  ASV_10      ASV_11      ASV_12      ASV_13      ASV_14      ASV_15
	{2000000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1900000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1800000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1700000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1600000,	 0x0,	     0x3, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1500000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1400000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1300000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1200000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1100000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1000000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{900000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{800000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{700000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,	     0xA},
	{600000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	     0xA,	 0xA,	     0xA,	 0xC,	     0xC},
	{500000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	     0xA,	 0xA,	     0xA,	 0xA,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC},
	{400000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	     0xA,	 0xA,	     0xA,	 0xA,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC},
	{300000,  ABB_BYPASS, ABB_BYPASS,	 0xA,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC},
	{200000,  ABB_BYPASS,	     0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC},
	{100000,  ABB_BYPASS,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC},
};

const u32 abb_table_mif_2[SYSC_DVFS_END_LVL_MIF+1][MAX_ASV_GROUP+1] = {
//	      ASV_0	  ASV_1       ASV_2	  ASV_3	      ASV_4	  ASV_5	      ASV_6	  ASV_7	      ASV_8	  ASV_9	      ASV_10      ASV_11      ASV_12      ASV_13      ASV_14      ASV_15
	{825, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{728, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{667, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{559, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{416, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 	     0xA, 	 0xA, 	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{338, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 	     0xA, 	 0xA, 	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{273, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 	     0xA, 	 0xA, 	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{200, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 	     0xA, 	 0xA, 	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
};

const u32 abb_table_int_2[SYSC_DVFS_END_LVL_INT+1][MAX_ASV_GROUP+1] = {
//	      ASV_0	  ASV_1       ASV_2	  ASV_3	      ASV_4	  ASV_5	      ASV_6	  ASV_7	      ASV_8	  ASV_9	      ASV_10      ASV_11      ASV_12      ASV_13      ASV_14      ASV_15
	{400, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{334, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{267, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{200, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{160, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 	     0xA, 	 0xA, 	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{134, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 	     0xA, 	 0xA, 	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{111, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 	     0xA, 	 0xA, 	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{100, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 	     0xA, 	 0xA, 	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
};

const u32 abb_table_isp_2[SYSC_DVFS_END_LVL_ISP+1][MAX_ASV_GROUP+1] = {
//	      ASV_0	  ASV_1       ASV_2	  ASV_3	      ASV_4	  ASV_5	      ASV_6	  ASV_7	      ASV_8	  ASV_9	      ASV_10      ASV_11      ASV_12      ASV_13      ASV_14      ASV_15
	{530, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{430, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{400, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{334, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{267, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 	     0xA, 	 0xA, 	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{200, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, 	     0xA, 	 0xA, 	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
};

const u32 volt_table_arm_3[SYSC_DVFS_END_LVL_CPU+1][MAX_ASV_GROUP+1] = {
//		  ASV_0    ASV_1    ASV_2    ASV_3    ASV_4    ASV_5    ASV_6    ASV_7	  ASV_8    ASV_9    ASV_10   ASV_11   ASV_12   ASV_13   ASV_14   ASV_15
	{2000000, 1325000, 1325000, 1312500, 1287500, 1262500, 1250000, 1237500, 1225000, 1212500, 1200000, 1187500, 1175000, 1162500, 1150000, 1137500, 1125000},
	{1900000, 1325000, 1325000, 1312500, 1287500, 1262500, 1250000, 1237500, 1225000, 1212500, 1200000, 1187500, 1175000, 1162500, 1150000, 1137500, 1125000},
	{1800000, 1325000, 1325000, 1312500, 1287500, 1262500, 1250000, 1237500, 1225000, 1212500, 1200000, 1187500, 1175000, 1162500, 1150000, 1137500, 1125000},
	{1700000, 1325000, 1325000, 1312500, 1287500, 1262500, 1250000, 1237500, 1225000, 1212500, 1200000, 1187500, 1175000, 1162500, 1150000, 1137500, 1125000},
	{1600000, 1325000, 1325000, 1312500, 1287500, 1262500, 1250000, 1237500, 1225000, 1212500, 1200000, 1187500, 1175000, 1162500, 1150000, 1137500, 1125000},
	{1500000, 1312500, 1312500, 1275000, 1237500, 1212500, 1200000, 1193750, 1181250, 1168750, 1156250, 1143750, 1131250, 1118750, 1106250, 1100000, 1087500},
	{1400000, 1268750, 1268750, 1231250, 1193750, 1168750, 1156250, 1150000, 1137500, 1125000, 1112500, 1106250, 1093750, 1081250, 1068750, 1062500, 1050000},
	{1300000, 1225000, 1225000, 1187500, 1150000, 1125000, 1112500, 1106250, 1093750, 1081250, 1068750, 1062500, 1056250, 1043750, 1031250, 1025000, 1012500},
	{1200000, 1181250, 1181250, 1143750, 1106250, 1081250, 1068750, 1062500, 1056250, 1043750, 1031250, 1025000, 1018750, 1006250,  993750,  987500,  981250},
	{1100000, 1143750, 1143750, 1106250, 1068750, 1043750, 1031250, 1025000, 1018750, 1006250,  993750,  987500,  981250,  968750,  956250,  950000,  943750},
	{1000000, 1106250, 1106250, 1068750, 1031250, 1006250,  993750,  987500,  981250,  968750,  962500,  956250,  950000,  937500,  925000,  918750,  912500},
	{900000,  1068750, 1068750, 1031250,  993750,  968750,  956250,  950000,  943750,  931250,  925000,  918750,  912500,  906250,  893750,  887500,  881250},
	{800000,  1031250, 1031250,  993750,  956250,  931250,  918750,  918750,  912500,  900000,  893750,  887500,  881250,  875000,  862500,  856250,  850000},
	{700000,  1000000, 1000000,  962500,  925000,  900000,  887500,  887500,  881250,  868750,  868750,  862500,  856250,  850000,  850000,  850000,  850000},
	{600000,   975000,  975000,  937500,  900000,  875000,  862500,  862500,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{500000,   950000,  950000,  912500,  875000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{400000,   925000,  925000,  887500,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{300000,   900000,  900000,  862500,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{200000,   875000,  875000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{100000,   850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
};

const u32 volt_table_g3d_3[SYSC_DVFS_END_LVL_G3D+1][MAX_ASV_GROUP+1] = {
//	      ASV_0    ASV_1    ASV_2    ASV_3    ASV_4    ASV_5    ASV_6    ASV_7    ASV_8    ASV_9    ASV_10   ASV_11   ASV_12   ASV_13   ASV_14   ASV_15
	{800, 1206250, 1206250, 1187500, 1168750, 1143750, 1137500, 1125000, 1118750, 1106250, 1093750, 1087500, 1075000, 1062500, 1056250, 1043750, 1037500},
	{734, 1150000, 1150000, 1131250, 1112500, 1093750, 1087500, 1075000, 1068750, 1056250, 1050000, 1037500, 1031250, 1018750, 1012500, 1000000,  993750},
	{668, 1100000, 1100000, 1081250, 1062500, 1050000, 1037500, 1031250, 1018750, 1012500, 1006250,  993750,  987500,  975000,  968750,  956250,  950000},
	{534, 1000000, 1000000,  987500,  968750,  956250,  943750,  937500,  931250,  918750,  912500,  906250,  893750,  887500,  881250,  868750,  862500},
	{440,  937500,  937500,  918750,  906250,  893750,  887500,  881250,  875000,  868750,  856250,  850000,  843750,  837500,  831250,  825000,  818750},
	{350,  881250,  881250,  868750,  856250,  843750,  837500,  831250,  825000,  818750,  812500,  806250,  800000,  793750,  787500,  787500,  787500},
	{266,  812500,  812500,  800000,  793750,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500},
	{160,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500,  787500},
};

const u32 volt_table_mif_3[SYSC_DVFS_END_LVL_MIF+1][MAX_ASV_GROUP+1] = {
//	      ASV_0    ASV_1     ASV_2    ASV_3    ASV_4    ASV_5    ASV_6    ASV_7    ASV_8    ASV_9    ASV_10   ASV_11   ASV_12   ASV_13   ASV_14   ASV_15
	{825, 1006250, 1006250,  993750,  981250,  968750,  962500,  956250,  950000,  943750,  937500,  931250,  925000,  918750,  912500,  906250,  900000},
	{728,  975000,  975000,  962500,  950000,  937500,  931250,  925000,  918750,  912500,  906250,  900000,  893750,  887500,  881250,  875000,  868750},
	{667,  975000,  975000,  962500,  950000,  937500,  931250,  925000,  918750,  912500,  906250,  900000,  893750,  887500,  881250,  875000,  868750},
	{559,  962500,  962500,  950000,  937500,  925000,  918750,  912500,  906250,  900000,  893750,  887500,  881250,  875000,  868750,  862500,  856250},
	{416,  881250,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{338,  881250,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{273,  881250,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{200,  881250,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
};

const u32 volt_table_int_3[SYSC_DVFS_END_LVL_INT+1][MAX_ASV_GROUP+1] = {
//	      ASV_0    ASV_1     ASV_2    ASV_3    ASV_4    ASV_5    ASV_6    ASV_7    ASV_8    ASV_9    ASV_10   ASV_11   ASV_12   ASV_13   ASV_14   ASV_15
	{400, 1006250, 1006250,  993750,  981250,  968750,  962500,  956250,  950000,  943750,  937500,  931250,  925000,  918750,  912500,  906250,  900000},
	{334,  975000,  975000,  962500,  950000,  937500,  931250,  925000,  918750,  912500,  906250,  900000,  893750,  887500,  881250,  875000,  868750},
	{267,  975000,  975000,  962500,  950000,  937500,  931250,  925000,  918750,  912500,  906250,  900000,  893750,  887500,  881250,  875000,  868750},
	{200,  962500,  962500,  950000,  937500,  925000,  918750,  912500,  906250,  900000,  893750,  887500,  881250,  875000,  868750,  862500,  856250},
	{160,  881250,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{134,  881250,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{111,  881250,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{100,  881250,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
};

const u32 volt_table_isp_3[SYSC_DVFS_END_LVL_ISP+1][MAX_ASV_GROUP+1] = {
//	      ASV_0    ASV_1     ASV_2    ASV_3    ASV_4    ASV_5    ASV_6    ASV_7    ASV_8    ASV_9    ASV_10   ASV_11   ASV_12   ASV_13   ASV_14   ASV_15
	{530, 1006250, 1006250,  993750,  981250,  968750,  962500,  956250,  950000,  943750,  937500,  931250,  925000,  918750,  912500,  906250,  900000},
	{430,  975000,  975000,  962500,  950000,  937500,  931250,  925000,  918750,  912500,  906250,  900000,  893750,  887500,  881250,  875000,  868750},
	{400,  975000,  975000,  962500,  950000,  937500,  931250,  925000,  918750,  912500,  906250,  900000,  893750,  887500,  881250,  875000,  868750},
	{334,  962500,  962500,  950000,  937500,  925000,  918750,  912500,  906250,  900000,  893750,  887500,  881250,  875000,  868750,  862500,  856250},
	{267,  881250,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
	{200,  881250,  881250,  868750,  856250,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000,  850000},
};

const u32 abb_table_arm_3[SYSC_DVFS_END_LVL_CPU+1][MAX_ASV_GROUP+1] = {
//		  ASV_0	      ASV_1       ASV_2	      ASV_3	  ASV_4	      ASV_5	  ASV_6	      ASV_7	  ASV_8	      ASV_9	  ASV_10      ASV_11      ASV_12      ASV_13      ASV_14      ASV_15
	{2000000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1900000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1800000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1700000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1600000,        0x0,	     0x0,	 0x3, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1500000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1400000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1300000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1200000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1100000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{1000000, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{900000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{800000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{700000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	     0xA},
	{600000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,	     0xA,	 0xA,	     0xC},
	{500000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,	     0xA,	 0xA,	     0xA,	 0xC,	     0xC,	 0xC,	     0xC},
	{400000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,	     0xA,	 0xA,	     0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC},
	{300000,  ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	     0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC},
	{200000,  ABB_BYPASS, ABB_BYPASS,	 0xA,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC},
	{100000,  ABB_BYPASS, ABB_BYPASS,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC},
};

const u32 abb_table_mif_3[SYSC_DVFS_END_LVL_MIF+1][MAX_ASV_GROUP+1] = {
//	      ASV_0	  ASV_1       ASV_2	  ASV_3	      ASV_4	  ASV_5	      ASV_6	  ASV_7	      ASV_8	  ASV_9	      ASV_10	  ASV_11      ASV_12	  ASV_13      ASV_14	  ASV_15
	{825, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{728, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{667, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{559, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{416, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,        0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{338, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,        0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{273, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,        0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{200, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,        0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
};

const u32 abb_table_int_3[SYSC_DVFS_END_LVL_INT+1][MAX_ASV_GROUP+1] = {
//	      ASV_0	  ASV_1       ASV_2	  ASV_3	      ASV_4	  ASV_5	      ASV_6	  ASV_7	      ASV_8	  ASV_9	      ASV_10	  ASV_11      ASV_12	  ASV_13      ASV_14	  ASV_15
	{400, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{334, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{267, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{200, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{160, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,        0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{134, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,        0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{111, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,        0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{100, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,        0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
};

const u32 abb_table_isp_3[SYSC_DVFS_END_LVL_ISP+1][MAX_ASV_GROUP+1] = {
//	      ASV_0	  ASV_1       ASV_2	  ASV_3	      ASV_4	  ASV_5	      ASV_6	  ASV_7	      ASV_8	  ASV_9	      ASV_10	  ASV_11      ASV_12	  ASV_13      ASV_14	  ASV_15
	{530, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{430, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{400, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{334, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS},
	{267, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,        0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
	{200, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS, ABB_BYPASS,	 0xA,        0xA,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC,	     0xC,	 0xC},
};
#endif
