#
# Sensor  drivers configuration
#

menuconfig SENSORS
	bool "Sensor devices"
	help
	  Say Y here, and a list of sensors drivers will be displayed.
	  Everything that didn't fit into the other categories is here. This option
	  doesn't affect the kernel.

	  If unsure, say Y.

config SENSORS_K2HH
	depends on I2C
	tristate "SENSORS_K2HH"
	default n
	help
	  Say Y here if you use SENSORS_K2HH.
	  This option enables accelerometer sensors using
	  STMicroelectronic K2HH device driver.

config SENSORS_PPSX60
	tristate "PARTRON & TI PPSX60 HRM Sensor"
	default n
	depends on I2C
	help
	  If you say yes here you get support for the PPSX60
	  HRM sensor.
	  This driver can also be built as a module.  If so, the module
	  will be called PPSX60.

config SENSORS_BH1733
	depends on I2C
	tristate "BH1733 driver"
	default n
	help
	  Say Y here if you use bh1733.
	  This option enables light sensors using
	  Rohm bh1733 device driver.

	  Say N here if you do not use bh1733.

config SENSORS_CM3323
	depends on I2C
	tristate "CM3323 driver"
	default n
	help
	  Say Y here if you use cm3323.
	  This option enables RGB sensors using
	  Capella cm3323 device driver.

	  Say N here if you do not use cm3323.

config SENSORS_CM36652
	depends on I2C
	tristate "CM36652 driver"
	default n
	help
	  This option enables proximity & light sensors using CM36652 driver.

config SENSORS_CM36652_LEDA_EN_GPIO
	depends on I2C
	tristate "CM36652 leda_en controlled by GPIO"
	default n
	help
	  This option enables leda_en controlled by GPIO using CM36652 driver.

config SENSORS_CM36652_SENSOR_EN_GPIO
	depends on I2C
	tristate "CM36652 sensor_en controlled by GPIO"
	default n
	help
	  This option enables leda_en controlled by GPIO using CM36652 driver.

config SENSORS_CM36655
	depends on I2C
	tristate "CM36655 driver"
	default n
	help
	  This option enables proximity & light sensors using CM36655 driver.

config SENSORS_CM36655_LEDA_EN_REGULATOR
	depends on I2C
	tristate "CM36652 sensor_en controlled by regulator"
	default n
	help
	  This option enables leda_en controlled by regulator using CM36652 driver.

config SENSORS_CM36655_POWER_REGULATOR
	depends on I2C
	tristate "CM36655 vdd & vio controlled"
	default n
	help
	  This option enables vdd & vio controlled using CM36655 driver.

config SENSORS_CM36655_LEDA_EN_GPIO
	depends on I2C
	tristate "CM36655 leda_en controlled by GPIO"
	default n
	help
	  This option enables leda_en controlled by GPIO using CM36655 driver.

config SENSORS_CM36655_SENSOR_EN_GPIO
	depends on I2C
	tristate "CM36655 sensor_en controlled by GPIO"
	default n
	help
	  This option enables leda_en controlled by GPIO using CM36655 driver.

config SENSORS_CM36655_RESET_DEFENCE_CODE
	depends on I2C
	tristate "CM36655 defence code by reset"
	default n
	help
	  This option enables defence code by reset using CM36655 driver.

config SENSORS_CM36672P
	depends on I2C
	tristate "CM36672P driver"
	default n
	help
	  This option enables proximity sensor using CM36672P driver.

config SENSORS_TCS3490
	depends on I2C
	tristate "TCS3490 driver"
	default n
	help
	  This option enables light sensor using TCS3490 driver.

config SENSORS_TMD3782
	depends on I2C
	tristate "TMD3782 driver"
	default n
	help
	   This option enables proximity & light sensors using TMD3782 driver.

config SENSORS_TMD3782_PROX_ABS
	depends on I2C
	tristate "TMD3782 driver"
	default n
	help
	   This option enables TMD3782 proximity sensor input report by ABS.

config SENSORS_TMD3700
	depends on I2C
	tristate "TMD3700 driver"
	default n
	help
	   This option enables proximity & light sensors using TMD3700 driver.

config SENSORS_TMD3700_RESET_DEFENCE_CODE
	depends on I2C
	tristate "TMD3700 defence code for reset"
	default n
	help
	  This option enables defence code for reset of VDD.

config SENSORS_STK3013
	depends on I2C
	tristate "STK3013 driver"
	default n
	help
	   This option enables proximity sensors using STK3013 driver.

config SENSORS_GRIP_CHK_HALLIC
	depends on I2C
	tristate "grip sensor check to hallic"
	default n
	help
	 This option enables grip sensors checking hall ic status.

config SENSORS_SX9306
	depends on I2C
	tristate "SX9306 driver"
	default n
	help
	 This option enables grip sensors using SemTech sx9306 device driver.

config SENSORS_SX9306_NORMAL_TOUCH_THRESHOLD
	int "SX9306 Grip sensor threshold for normal touch"
	depends on SENSORS_SX9306
	default "17"
	help
	  This value is the standard of normal touch using SemTech sx9306 device driver.

config SENSORS_SX9310
	depends on I2C
	tristate "SX9310 driver"
	default n
	help
	  Say Y here if you use sx9310.
	  This option enables grip sensors using
	  SemTech sx9310 device driver.

	  Say N here if you do not use sx9310.

config SENSORS_SX9310_INIT_TOUCH_THRESHOLD
	int "SX9310 Grip sensor threshold for init touch"
	depends on SENSORS_SX9310
	default "3000"
	help
	  This value is the standard of init touch using
	  SemTech sx9310 device driver.

config SENSORS_SX9310_NORMAL_TOUCH_THRESHOLD
	int "SX9310 Grip sensor threshold for normal touch"
	depends on SENSORS_SX9310
	default "17"
	help
	  This value is the standard of normal touch using
	  SemTech sx9310 device driver.

config SENSORS_SX9310_WIFI
	depends on I2C
	tristate "SX9310 driver"
	default n
	help
	  Say Y here if you use sx9310.
	  This option enables grip sensors using
	  SemTech sx9310 device driver.

	  Say N here if you do not use sx9310.

config SENSORS_SX9310_WIFI_INIT_TOUCH_THRESHOLD
	int "SX9310 Grip sensor threshold for init touch"
	depends on SENSORS_SX9310_WIFI
	default "3000"
	help
	  This value is the standard of init touch using
	  SemTech sx9310 device driver.

config SENSORS_SX9310_WIFI_NORMAL_TOUCH_THRESHOLD
	int "SX9310 Grip sensor threshold for normal touch"
	depends on SENSORS_SX9310_WIFI
	default "17"
	help
	  This value is the standard of normal touch using
	  SemTech sx9310 device driver.

config SENSORS_SX9500
	depends on I2C
	tristate "SX9500 driver"
	default n
	help
	  Say Y here if you use sx9500.
	  This option enables grip sensors using
	  SemTech sx9500 device driver.

	  Say N here if you do not use sx9500.

config SENSORS_SX9500_INIT_TOUCH_THRESHOLD
	int "SX9500 Grip sensor threshold for init touch"
	depends on SENSORS_SX9500
	default "3000"
	help
	  This value is the standard of init touch using
	  SemTech sx9500 device driver.

config SENSORS_SX9500_NORMAL_TOUCH_THRESHOLD
	int "SX9500 Grip sensor threshold for normal touch"
	depends on SENSORS_SX9500
	default "17"
	help
	  This value is the standard of normal touch using
	  SemTech sx9500 device driver.

config SENSORS_SX9500_TEMPERATURE_COMPENSATION
	depends on SENSORS_SX9500
	tristate "SX9500 Grip sensor temperature compensation"
	default n
	help
	  Say Y here if you use temperature compensation code.
	  This option enables grip sensors using
	  temperature compensation code.

config SENSORS_SX9500_REGULATOR_ONOFF
	depends on SENSORS_SX9500
	tristate "SX9500 Grip sensor Regulator"
	default n
	help
	  Say Y here if you use regulator for grip sensor.
	  This option enables regulator for grip sensor using
	  SemTech sx9500 device driver.

config SENSORS_SX9500_WIFI
	depends on I2C
	tristate "SX9500 driver for wifi"
	default n
	help
	  Say Y here if you use sx9500 for wifi.
	  This option enables grip sensors using
	  SemTech sx9500 device driver for wifi.

	  Say N here if you do not use sx9500 for wifi.

config SENSORS_SX9500_WIFI_INIT_TOUCH_THRESHOLD
	int "SX9500 Grip sensor threshold for init touch for wifi"
	depends on SENSORS_SX9500_WIFI
	default "3000"
	help
	  This value is the standard of init touch using
	  SemTech sx9500 device driver for wifi.

config SENSORS_SX9500_WIFI_NORMAL_TOUCH_THRESHOLD
	int "SX9500 Grip sensor threshold for normal touch for wifi"
	depends on SENSORS_SX9500_WIFI
	default "17"
	help
	  This value is the standard of normal touch using
	  SemTech sx9500 device driver for wifi.

config SENSORS_SX9500_WIFI_TEMPERATURE_COMPENSATION
	depends on SENSORS_SX9500_WIFI
	tristate "SX9500 Grip sensor temperature compensation for wifi"
	default n
	help
	  Say Y here if you use temperature compensation code.
	  This option enables grip sensors using
	  temperature compensation code.

config SENSORS_SX9500_WIFI_REGULATOR_ONOFF
	depends on SENSORS_SX9500_WIFI
	tristate "SX9500 Grip sensor Regulator for WIFI"
	default n
	help
	  Say Y here if you use regulator for grip sensor for WIFI.
	  This option enables regulator for grip sensor using
	  SemTech sx9500 device driver for WIFI.

config SENSORS_MAX86900
	tristate "MAXIM MAX86900 HRM Sensor"
	default n
	depends on I2C
	help
	  If you say yes here you get support for the MAX86900
	  HRM sensor.
	  This driver can also be built as a module.  If so, the module
	  will be called max86900.

config SENSORS_MAX86902
	tristate "MAXIM MAX86902 HRM & UV Sensor"
	default n
	depends on I2C
	help
	  If you say yes here you get support for the MAX86902
	  HRM & UV sensor.
	  This driver can also be built as a module.	If so, the module
	  will be called max86902.

config SENSORS_BMA2X2
	tristate "BMA255/BMA250E/BMA222E/BMA280 acceleration sensor support"
	depends on I2C
	help
	  If you say yes here you get support for Bosch Sensortec's
	  acceleration sensors BMA255/BMA250E/BMA222E/BMA280.

config SENSORS_BMA2X2_ENABLE_INT1
	tristate "BMA2X2 acceleration sensor interrupt INT1 support"
	depends on SENSORS_BMA2X2
	help
	 If you say yes here, you get INT1 support for Bosch Sensortec
	 acceleration sensors BMA255/BMA254/BMA355/BMA250E/BMA222E/BMA280.

config INPUT_BMA2x2_ACC_ALERT_INT
	tristate "BMA255/BMA250E/BMA222E/BMA280 acceleration sensor support"
	depends on I2C=y
	help
	  If you say yes here you get support for Bosch Sensortec's
	  acceleration sensors BMA255/BMA250E/BMA222E/BMA280.

config SENSORS_BMM050
	tristate "BMM050 Magnetic Sensor Driver"
	depends on I2C
	help
	 BMM050 Magnetic Sensor Driver implemented by Bosch-Sensortec.

config SENSORS_YAS537
	tristate "YAS537 Sensor Driver"
	depends on I2C
	default n
	help
	  If you say yes here you get support for YAMAHA
	  YAS537 Geomagnitor Sensor.

config SENSORS_YAS_RESET_DEFENCE_CODE
	depends on I2C
	tristate "YAS defence code by reset"
	default n
	help
	  This option enables defence code by reset using yas driver.

source "drivers/sensors/max_notchfilter/Kconfig"
